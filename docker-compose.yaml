version: '3'

networks:
  diary:
    driver: bridge

services:
  redis:
    image: redis:latest
    restart: on-failure
    networks:
      - diary
    expose:
      - '6379'

  db:
    image: postgres:latest
    restart: on-failure
    networks:
      - diary
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgres/data
    healthcheck:
      test: [ 'CMD-SHELL', '-c', 'pg_isready -U $POSTGRES_USER' ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    networks:
      - diary
    ports:
      - '80:8000'
    env_file:
      - .env
    command: sh -c 'python manage.py migrate && python manage.py runserver 0.0.0.0:8000'
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

volumes:
    pg_data:
